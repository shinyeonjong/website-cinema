<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.allnightMovies.dao.DBMapper">

<!-- /* JI. SELECT MENU */ --> 	
	<resultMap type="com.allnightMovies.model.data.SubMenu" id="SubMenu">
		<result column="subMenuName" property="subMenuName"/>
		<result column="subMenuPage" property="subMenuPage"/>
	</resultMap>
	
	<resultMap type="com.allnightMovies.model.data.MainMenu" id="MainMenu">
		<result column="mainMenuName" property="mainMenuName"/>
		<result column="mainMenuPage" property="mainMenuPage"/>
		<collection property="subMenuList" resultMap="SubMenu"/>
	</resultMap>

	<select id="getMenus" resultMap="MainMenu">
		<![CDATA[
			SELECT 
			    MAIN_MENU_NAME mainMenuName, 
			    MAIN_MENU_PAGE mainMenuPage,
			    SUB_MENU_NAME subMenuName,
			    SUB_MENU_PAGE subMenuPage 
			FROM SUB_MENU  
			JOIN MAIN_MENU  
			ON(SUB_MAIN_MENU = MAIN_MENU_PAGE)
		]]>
	</select>
<!-- /* JI. LOGIN */ -->		
	<select id="login" resultType="com.allnightMovies.model.data.userInfo.UserPersonalLoginInfoDTO" parameterType="com.allnightMovies.model.params.Params">
		SELECT USER_ID userID, USER_STATES userStates, USER_PWD userPwd
		FROM USER_PERSONAL_INFO
		WHERE USER_ID = #{userID}
	</select>
		
<!-- /* JI. JOIN */ -->	
	<select id="idCheck" resultType="java.lang.Integer" parameterType="java.lang.String">
		SELECT COUNT(USER_ID) FROM USER_PERSONAL_INFO WHERE USER_ID=#{id}
	</select>

	<insert id="insertJoinUserInfo" parameterType="com.allnightMovies.model.data.userInfo.UserPersonalInfoDTO">
		INSERT INTO USER_PERSONAL_INFO(
			USER_ID,
		    USER_PWD,
		    USER_NAME,
		    USER_EMAIL,
		    USER_BIRTH,
		    USER_GENDER
		) VALUES (
			#{userID},
		    #{userPWD},
		    #{userName},
		    #{userEmail},
		    #{userBirth},
		    #{userGender}
		)
	</insert>

<!-- /* JI. TICKETING */ -->
	<select id="getMaxScreeningDate" resultType="com.allnightMovies.model.data.movieInfo.MovieScreeningDateInfo">
		SELECT MIN(MOVIE_SCREENING_DATE) SCREENINGMINDATE, MAX(MOVIE_SCREENING_DATE) SCREENINGMAXDATE
		FROM MOVIE_SCREENING_PRICE
	</select>	
	
	<select id="getMovieTitle" resultType="com.allnightMovies.model.data.movieInfo.TicketingMovieTitleInfo">
		SELECT 
			DECODE(MOVIE_AGE_LIMIT, 0, 'All', MOVIE_AGE_LIMIT) MOVIEAGELIMIT,
		    MOVIE_TITLE MOVIETITLE
		FROM MOVIE_BASIC_INFO
	</select>
	
	<resultMap type="java.lang.String" id="movieTime">
		<result column="movieTime" property="movieTime"/>
	</resultMap>
	
	<resultMap type="com.allnightMovies.model.data.movieInfo.TicketingMovieTimeInfo" id="movieTimeInfo">
		<result column="movieTheather" property="movieTheather"/>
		<collection property="movieTime" resultMap="movieTime"/>
	</resultMap>
	
	<select id="getMovieTime" resultMap="movieTimeInfo">
		SELECT MOVIE_THEATHER MOVIETHEATHER, SUBSTR(MOVIE_SCREENING_DATE, 12, 5) MOVIETIME 
		FROM MOVIE_SCREENING_PRICE
		WHERE MOVIE_TITLE=#{param1} AND MOVIE_SCREENING_DATE LIKE #{param2}||'%'
	</select>
<!-- JUNG. 상영시간 list -->
	<resultMap type="com.allnightMovies.model.data.movieInfo.MovieshowTableDTO" id="MovieshowTableDTO">
		<result column="screening_time"	property="screening_time"/>
		<result column="movie_theather" property="movie_theather"/>
	</resultMap>
	
	<resultMap type="com.allnightMovies.model.data.movieInfo.MovieShowTitleDTO" id="MovieShowTitleDTO">
		<result column="movie_title"	property="movie_title"/>
		<collection property="movieshowTableDTO" resultMap="MovieshowTableDTO"/>
	</resultMap>

	<resultMap type="com.allnightMovies.model.data.movieInfo.MovieShowTimesMap" id="MovieShowTimesMap">
		<result column="screening_Date" property="screening_Date" />
		<collection property="movieShowTitleDTO" resultMap="MovieShowTitleDTO"/>	
	</resultMap>
	
<!-- JUNG. 상영시간표  -> 상영날짜 LIST -->
	<select id="showtimes" resultMap="MovieShowTimesMap" parameterType="java.util.Map"> 
		SELECT 
		    DISTINCT SUBSTR(MOVIE_SCREENING_DATE,6,5) AS SCREENING_DATE,
		    MOVIE_THEATHER,
		    SUBSTR(MOVIE_SCREENING_DATE,12,5) AS SCREENING_TIME,
		    MOVIE_TITLE
		FROM MOVIE_SCREENING_PRICE 
		ORDER BY SCREENING_DATE ASC, MOVIE_TITLE ASC, SCREENING_DATE ASC
	</select>
	
	<!--아이디(회원정보)-->
<!--JUNG. 아이디 찾기-->
	<select id = "searchId" resultType="java.lang.String" parameterType="com.allnightMovies.model.params.Params">
		SELECT 
			USER_ID 
			FROM USER_PERSONAL_INFO 
		WHERE USER_NAME = #{param1} AND  USER_BIRTH = #{param2} AND USER_GENDER = #{param3}
	</select>
	
	
<!--JUNG. 아이디 (유무)-->
	<select id= "searchIdCount" resultType="java.lang.Integer" parameterType="com.allnightMovies.model.params.Params">
		SELECT COUNT(USER_ID) 
			FROM USER_PERSONAL_INFO 
		WHERE USER_NAME = #{param1} AND  USER_BIRTH = #{param2} AND USER_GENDER = #{param3}	
	</select>

<!-- 아이디(이메일) -->
 	<select id="searchEmailCount" resultType="java.lang.Integer" parameterType="com.allnightMovies.model.params.Params">
		SELECT COUNT(USER_ID)
			FROM USER_PERSONAL_INFO
		WHERE USER_EMAIL = #{param1}
	</select> 
	
	<select id ="searchIDEmail" resultType="java.lang.String" parameterType="com.allnightMovies.model.params.Params">
		SELECT USER_ID
			FROM USER_PERSONAL_INFO
		WHERE USER_EMAIL = #{param1}
	</select>

<!-- /* SHIN. SEARCH PWD */ -->	
	<select id="searchPWD" resultType="java.lang.Integer" parameterType="java.lang.String">
		SELECT COUNT(*) 
		FROM USER_PERSONAL_INFO 
		WHERE USER_ID = #{searchPwdUserID}
	</select>	
	<select id="searchEmail" resultType="java.lang.String" parameterType="java.lang.String">
		SELECT USER_EMAIL 
		FROM USER_PERSONAL_INFO 
		WHERE USER_ID = #{searchPwdUserID}
	</select>
	<select id="updateNewPwd" resultType="java.lang.String" parameterType="java.lang.String">
		UPDATE USER_PERSONAL_INFO 
		SET USER_PWD = #{param2}
		WHERE USER_ID = #{param1}
	</select>	
	
<!-- SHIN. MY INFO -->
   <select id="selectMyInfo" resultType="com.allnightMovies.model.data.userInfo.UserPersonalInfoDTO" parameterType="java.lang.String">
      SELECT 
         USER_ID      as userID,
         USER_PWD     as userPWD,
         USER_NAME    as userName,
         DECODE(USER_GENDER, 'female', '여자', 'male' ,'남자') as userGender,
         USER_BIRTH   as userBirth,
         USER_EMAIL   as userEmail,
         USER_REGDATE as userRegDate,
         USER_STATES  as userStates
      FROM USER_PERSONAL_INFO
      WHERE USER_ID = #{myInfoID}   
   </select> 
   
   <select id="selectUserPWD" resultType="java.lang.String" parameterType="java.lang.String">
      SELECT USER_PWD
      FROM USER_PERSONAL_INFO
      WHERE USER_ID = #{myInfoID}
   </select>

	<select id="updateWithdraw" resultType="java.lang.String" parameterType="java.lang.String">
		UPDATE USER_PERSONAL_INFO 
		SET USER_STATES = 0
		WHERE USER_ID = #{myInfoID}
	</select>
	
	<select id="updateEmailAddr" resultType="java.lang.String" parameterType="java.lang.String">
		UPDATE USER_PERSONAL_INFO 
		SET USER_EMAIL = #{param1}
		WHERE USER_ID = #{param2}
	</select>

<!-- SHIN. MOVIE  CURRENTFILM -->	
	<select id="getCurrentFilmDTO" resultType="com.allnightMovies.model.data.movieInfo.MovieCurrentFilmDTO">
		SELECT * FROM (
			SELECT MOVIE_TITLE  movieTitle,
                   MOVIE_POSTER moviePoster,
                   DECODE(MOVIE_AGE_LIMIT, 0, 'All', 12 ,'12', 15, '15', 19, '19') movieAgeLimit,
                   ROWNUM RNUM
			FROM (
				SELECT *
				FROM MOVIE_BASIC_INFO 
				WHERE MOVIE_RELEASE_DATE
				<![CDATA[ 
				 < 
				]]>
				SYSDATE 
				ORDER BY MOVIE_TITLE ASC
			    )
			)    
	</select>
<!-- SHIN. MOVIE  PLANNEDFILM -->		
	<select id="getPlannedFilmDTO" resultType="com.allnightMovies.model.data.movieInfo.MovieScreeningsPlannedDTO">
		SELECT * FROM (
			SELECT MOVIE_TITLE  movieTitle,
                   MOVIE_POSTER moviePoster,
                   DECODE(MOVIE_AGE_LIMIT, 0, 'All', 12 ,'12', 15, '15', 19, '19') movieAgeLimit,
                   ROWNUM RNUM
			FROM (
				SELECT *
				FROM MOVIE_BASIC_INFO 
				WHERE MOVIE_RELEASE_DATE
				<![CDATA[ 
				 > 
				]]>
				SYSDATE 
				ORDER BY MOVIE_TITLE ASC
			    )
			)   
	</select>
</mapper>
